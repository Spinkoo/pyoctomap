# Multi-version Dockerfile for building pyoctomap wheels
FROM quay.io/pypa/manylinux_2_28_x86_64:2025.09.19-1 AS builder

# Install build dependencies
RUN yum install -y cmake3 make gcc gcc-c++ git

# Copy source code
COPY . /project
WORKDIR /project

# Build OctoMap C++ library
RUN cd src/octomap && \
    mkdir -p build && \
    cd build && \
    cmake3 .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Copy libraries to the expected location
RUN mkdir -p src/octomap/lib && \
    find /usr/local/lib -name "*.so*" -exec cp {} src/octomap/lib/ \; && \
    find /usr/local/lib -name "*.a" -exec cp {} src/octomap/lib/ \; && \
    echo "Libraries copied:" && \
    ls -la src/octomap/lib/

# Build wheels for multiple Python versions
RUN for py_version in cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312 cp313-cp313; do \
        echo "Building wheel for Python $py_version..." && \
        /opt/python/$py_version/bin/pip install --upgrade pip setuptools wheel && \
        /opt/python/$py_version/bin/pip install numpy cython && \
        /opt/python/$py_version/bin/python setup.py bdist_wheel && \
        echo "Built wheel for $py_version"; \
    done

# Show what libraries are in the wheels before repair
RUN echo "Libraries in wheels before repair:" && \
    for wheel in dist/*.whl; do \
        echo "=== $wheel ===" && \
        unzip -l "$wheel" | grep -E "\.(so|a)$" || echo "No libraries found"; \
    done

# Install auditwheel
RUN /opt/python/cp311-cp311/bin/pip install auditwheel

# Copy libraries to standard location for auditwheel
RUN cp src/octomap/lib/*.so* /usr/local/lib/ && \
    ldconfig

# Repair all wheels for manylinux compatibility
RUN for wheel in dist/*.whl; do \
        echo "Repairing $wheel..." && \
        /opt/python/cp311-cp311/bin/auditwheel repair "$wheel" -w dist/ --plat manylinux_2_28_x86_64; \
    done

# Show final wheels
RUN echo "Final wheels:" && ls -la dist/

# Final stage - just copy the built wheels
FROM alpine:latest
RUN apk add --no-cache bash
COPY --from=builder /project/dist/*.whl /wheels/
WORKDIR /wheels
CMD ["ls", "-la"]
